name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-pnpm.outputs.cache-hit }}
    steps:
      - name: Set up Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Cache pnpm store
        id: cache-pnpm
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install pnpm
        if: steps.cache-pnpm.outputs.cache-hit != 'true'
        run: npm install -g pnpm

  build:
    runs-on: ubuntu-latest
    needs: setup

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache pnpm store
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ matrix.node-version }}-

      - name: Install dependencies
        run: pnpm install

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: pnpm-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ matrix.node-version }}-

      - name: Run tests
        run: pnpm test

      - name: Build application
        run: pnpm build

      - name: Cache build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: .next

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: .next

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: pnpm-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ matrix.node-version }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          pnpm add -g vercel
          vercel --token $VERCEL_TOKEN --prod
